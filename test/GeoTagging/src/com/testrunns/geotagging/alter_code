package com.testrunns.geotagging;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.net.Authenticator;
import java.net.HttpURLConnection;
import java.net.PasswordAuthentication;
import java.net.URL;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;

import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.os.Bundle;
import android.provider.MediaStore;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class CameraActivity extends Activity {
	
	//Camera
	private static final int CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE = 100;
	public static final int MEDIA_TYPE_IMAGE = 1;
	
	//Http connection
	public static final String SERVICE_URL ="http://wi-gate.technikum-wien.at:60360/examples/servlets/servlet/HelloWorldExample";
	
	//Location
	private final static int CONNECTION_FAILURE_RESOLUTION_REQUEST = 9000;
	
	Bitmap mImageBitmap;
	ImageView mImageView;
	
	private TextView urlTextView;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_camera_activity);
		
		mImageView = (ImageView) findViewById(R.id.imageView1);
		urlTextView = (TextView) findViewById(R.id.textView1);
		
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.camera, menu);
		return true;
	}
	
	public void onTakePictureButtonClick(View view){
		takePicture(CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE);
	}

	private void takePicture(int requestCode) {
		Intent takePicIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
		startActivityForResult(takePicIntent, requestCode);	
	}
	
	private void displayImageThumbnail(Intent intent){
		Bundle extras = intent.getExtras();
		mImageBitmap = (Bitmap) extras.get("data");
		mImageView.setImageBitmap(mImageBitmap);
	}
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
	
			displayImageThumbnail(data);
		
	}
	
	//----------------Network Connection -----------------------//
	
	public void getUrlclickHandler(View v){
		ConnectivityManager connManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo networkInfo = connManager.getActiveNetworkInfo();
		if(networkInfo != null && networkInfo.isConnected()){
			new DownloadWebpageTask().execute(SERVICE_URL);
		}
		else{
			Toast.makeText(this, "conn not OK", Toast.LENGTH_SHORT).show();
		}
	}
	
	private class DownloadWebpageTask extends AsyncTask<String, Void, String>{
		
		

		@Override
		protected String doInBackground(String... urls) {
			try {
				return downloadUrl(urls[0]);
			} catch (IOException e) {
				return "Unable to retrieve page";
			}
		}
		
		
		
		private String downloadUrl(String myurl) throws IOException {
		    InputStream is = null;
		    // Only display the first 500 characters of the retrieved
		    // web page content.
		    int len = 500;
		    
		    
		    ///----------------------Autentifikation mit username Passwort bei xampp-----------------------
//		    Authenticator.setDefault(new Authenticator(){
//				protected PasswordAuthentication getPasswordAuthentication(){
//					return new PasswordAuthentication("Matthias", "meinPass".toCharArray());
//				}
//			});
		        
		    try {
		        URL url = new URL(myurl);
		        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		        conn.setReadTimeout(10000 /* milliseconds */);
		        conn.setConnectTimeout(15000 /* milliseconds */);
		        conn.setRequestMethod("GET");
		        conn.setDoInput(true);
		        Log.d("test","hier");
		        
		        // Starts the query
		        conn.connect();
		        int response = conn.getResponseCode();
		        Log.d("downloadUrl", "The response is: " + response);
		        is = conn.getInputStream();

		        // Convert the InputStream into a string
		        String contentAsString = readIt(is, len);
		        return contentAsString;
		        
		    // Makes sure that the InputStream is closed after the app is
		    // finished using it.
		    } finally {
		        if (is != null) {
		            is.close();
		        } 
		    }
		}
		
		// Reads an InputStream and converts it to a String.
		public String readIt(InputStream stream, int len) throws IOException, UnsupportedEncodingException {
		    Reader reader = null;
		    reader = new InputStreamReader(stream, "UTF-8");        
		    char[] buffer = new char[len];
		    reader.read(buffer);
		    return new String(buffer);
		}

		@Override
		protected void onPostExecute(String result) {
			urlTextView.setText(""+result);
		}
		
	}
	
	
//-----------------------LOCATION---------------------------------------------

	
	public void getLocation(View view){
		int available = GooglePlayServicesUtil.isGooglePlayServicesAvailable(getApplicationContext());
		Toast.makeText(getApplicationContext(), "hier:"+available+" success="+ConnectionResult.SUCCESS, Toast.LENGTH_SHORT).show();
	}

}
